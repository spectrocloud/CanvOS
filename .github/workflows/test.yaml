name: Test & Validate

on:
  push:
    # paths:
    # - 'cli'
    branches-ignore: [ main ]

env:
  GITHUB_TOKEN: ${{ github.token }}
  LINT_VERSION: "1.25.1"

concurrency:
  group: cli-${{ github.pr_workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.20'
        check-latest: true
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    -
      name: "Get dependencies"
      id: dependencies
      run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
  
    - name: Go Tests
      run: |
        go test ./...

  compile:
    name: Compile validation
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.20'
        check-latest: true
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: "Get dependencies"
      id: dependencies
      run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:  
        args: -v

    - name: create .netrc file
      env:
        REPO_USER: ${{ secrets.REPO_USER }}
        REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      shell: bash
      run: |
        echo "machine github.com" > .netrc
        echo "    login $REPO_USER" >> .netrc
        echo "    password $REPO_TOKEN" >> .netrc
        echo "machine api.github.com" >> .netrc
        echo "    login $REPO_USER" >> .netrc
        echo "    password $REPO_TOKEN" >> .netrc
  
    - name: build & execute
      run: |
        echo "--------------------------------------------------"
        go build -ldflags="-X 'specrocloud.com/internal.Version=1.0.0'" -o=canvos -v
        ./canvos version