FROM quay.io/kairos/kairos-init:v0.5.17 AS kairos-init

FROM ubuntu:22.04
ARG VERSION=v3.5.2

RUN --mount=type=bind,from=kairos-init,src=/kairos-init,dst=/kairos-init \
    /kairos-init -l debug -s install --version "${VERSION}"
# Remove default kernel that Kairos-init installs
RUN apt-get remove -y linux-base linux-image-generic-hwe-22.04 && apt-get autoremove -y
RUN --mount=type=secret,id=pro-attach-config \
    apt update && \
    apt install --no-install-recommends -y apt-utils ubuntu-advantage-tools ca-certificates util-linux && \
    pro attach --attach-config /run/secrets/pro-attach-config && \
    pro enable usg && \
    apt install -y usg && \
    apt update && apt install -y strongswan strongswan-hmac openssh-client openssh-server linux-image-fips shim-signed && \
    LATEST_VERSION=$(apt-cache search --names-only '^linux-image-[0-9].*-fips$' \
    | awk '{print $1}' \
    | grep -vE '(azure|aws|gcp)' \
    | sort -V \
    | tail -n1 \
    | sed -E 's/^linux-image-([0-9][^ ]*)-fips$/\1/') && \
    apt install -y --no-install-recommends \
        "linux-image-${LATEST_VERSION}-fips" \
        "linux-modules-${LATEST_VERSION}-fips" \
        "linux-headers-${LATEST_VERSION}-fips" && \
    apt-mark hold "linux-image-${LATEST_VERSION}-fips" "linux-modules-${LATEST_VERSION}-fips" && \
    apt update && apt upgrade -y && \
    for v in `ls /lib/modules`; do apt install -y linux-headers-$v; done && \
    apt install -y --no-install-recommends \
        linux-headers-virtual \
        thin-provisioning-tools \
        btrfs-progs cifs-utils cloud-guest-utils conntrack console-data coreutils cryptsetup curl debianutils \
        dmsetup dosfstools dracut dracut-live dracut-network e2fsprogs efibootmgr file fuse gawk gdisk gnupg \
        grub2 grub2-common grub-efi-amd64-bin grub-efi-amd64-signed grub-pc-bin haveged iproute2 \
        iptables isc-dhcp-common jq kbd krb5-locales lldpd lldpad lvm2 mdadm nano nbd-client \
        ncurses-term neovim networkd-dispatcher nfs-common nvme-cli open-iscsi openssh-server \
        open-vm-tools os-prober packagekit-tools parted patch policykit-1 publicsuffix qemu-guest-agent \
        rng-tools rsync shared-mime-info shim-signed snmpd squashfs-tools sudo systemd thermald \
        ubuntu-advantage-tools xdg-user-dirs xxd xz-utils zerofree zfsutils-linux zstd && \
    apt-get remove -y unattended-upgrades && \
    apt-get clean && rm -rf /var/lib/apt/lists/*
    # Determine the installed FIPS kernel version
RUN fips_kernel=$(basename $(ls /lib/modules | grep -- '-fips$' | sort -V | tail -n1)) && \
    echo "Detected FIPS kernel: $fips_kernel" && \
    # Remove all other kernel module trees (e.g., -generic)
    find /lib/modules -mindepth 1 -maxdepth 1 -type d ! -name "$fips_kernel" -exec rm -rf {} + && \
    find /usr/lib/modules -mindepth 1 -maxdepth 1 -type d ! -name "$fips_kernel" -exec rm -rf {} +

# Copy the custom dracut modules.fips that includes 2 missing modules
COPY modules.fips /tmp/modules.fips
RUN kernel=$(ls /lib/modules | head -n1) && mv /tmp/modules.fips /lib/modules/${kernel}/modules.fips

RUN --mount=type=bind,from=kairos-init,src=/kairos-init,dst=/kairos-init \
    /kairos-init -l debug -s init --version "${VERSION}"

# Symlink kernel HMAC
RUN kernel=$(ls /boot/vmlinuz-* | head -n1) && ln -sf ."${kernel#/boot/}".hmac /boot/.vmlinuz.hmac


# Clear cache
RUN usg fix disa_stig && \
    pro detach --assume-yes && rm -rf /var/cache/* /tmp/* /var/tmp/* && \
    journalctl --vacuum-size=1K || true && \
    rm -f /etc/machine-id /var/lib/dbus/machine-id /etc/hostname || true