# Kairos init image
FROM quay.io/kairos/kairos-init:v0.5.18 AS kairos-init

# Kairos framework packages for ubuntu fips
# FROM gcr.io/spectro-images-public/kairos/framework:v2.11.7-fips as kairos-fips
FROM quay.io/kairos/framework:v2.11.7-fips AS kairos-fips

# Base ubuntu image (focal)
# FROM ubuntu:focal as base
FROM 3pings/ubuntu-fips:jammy AS BASE

<<<<<<< HEAD
ARG KAIROS_VERSION=v3.5.1
=======
# Generate os-release file
FROM quay.io/kairos/osbuilder-tools:v0.200.11 AS osbuilder
RUN zypper install -y gettext && zypper clean
RUN mkdir /workspace
COPY --from=base /etc/os-release /workspace/os-release
# You should change the following values according to your own versioning and other details
RUN OS_NAME=kairos-core-ubuntu-fips \
  OS_VERSION=v3.1.3 \
  OS_ID="ubuntu" \
  BUG_REPORT_URL="https://github.com/spectrocloud/ubuntu-fips-edge/issues" \
  HOME_URL="https://github.com/spectrocloud/ubuntu-fips-edge" \
  OS_REPO="gcr.io/spectro-images-public/ubuntu-focal-fips" \
  OS_LABEL="20.04" \
  GITHUB_REPO="https://github.com/spectrocloud/ubuntu-fips-edge" \
  VARIANT="fips" \
  FLAVOR="ubuntu" \
  /update-os-release.sh

# Build the custom ubuntu image
FROM base
>>>>>>> 3fef23b (Updated Dockerfiles for Ubuntu FIPS: upgraded framework version to v2.11.7-fips and adjusted OS repository references for 22.04.)

# Don't get asked while running apt commands
ENV DEBIAN_FRONTEND=noninteractive

RUN --mount=type=bind,from=kairos-init,src=/kairos-init,dst=/kairos-init \
    /kairos-init -l debug -s install --version "${KAIROS_VERSION}"

## THIS comes from the Ubuntu documentation: https://canonical-ubuntu-pro-client.readthedocs-hosted.com/en/latest/tutorials/create_a_fips_docker_image.html
## I've just added "linux-image-fips" in the package list
RUN --mount=type=secret,id=pro-attach-config \
<<<<<<< HEAD
  apt-get update \
  && apt-get install --no-install-recommends -y ubuntu-advantage-tools ca-certificates \
  && pro attach --attach-config /run/secrets/pro-attach-config \
  && apt-get upgrade -y \
  && apt-get install -y --no-install-recommends \
  openssl \
  libssl1.1 \
  libssl1.1-hmac \
  libgcrypt20 \
  libgcrypt20-hmac \
  strongswan \
  strongswan-hmac \
  openssh-client \
  openssh-server \
  linux-image-fips \
  linux-headers-fips \
  shim-signed \
  conntrack \
  console-data \
  coreutils \
  cryptsetup \
  curl \
  debianutils \
  dmsetup \
  dosfstools \
  dracut \
  dracut-network \
  e2fsprogs \
  efibootmgr \
  file \
  fuse \
  gawk \
  gdisk \
  grub2 \
  grub2-common \
  grub-efi-amd64-bin \
  grub-efi-amd64-signed \
  grub-pc-bin \
  haveged \
  iproute2 \
  iptables \
  isc-dhcp-common \
  jq \
  kbd \
  krb5-locales \
  lldpd \
  lvm2 \
  mdadm \
  nano \
  nbd-client \
  ncurses-term \
  neovim \
  networkd-dispatcher \
  nfs-common \
  open-iscsi \
  openssh-server \
  open-vm-tools \
  os-prober \
  packagekit-tools \
  parted \
  patch \
  policykit-1 \
  publicsuffix \
  qemu-guest-agent \
  rsync \
  shared-mime-info \
  snmpd \
  squashfs-tools \
  sudo \
  systemd \
  systemd-timesyncd \
  thermald \
  ubuntu-advantage-tools \
  xdg-user-dirs \
  xxd \
  xz-utils \
  zerofree \
  zfsutils-linux \
  zstd \
  cloud-guest-utils \
  && apt-get remove -y unattended-upgrades && apt-get clean \
  && rm -rf /var/lib/apt/lists/* \
  && pro detach --assume-yes

=======
    apt update \
    && apt install --no-install-recommends -y ubuntu-advantage-tools ca-certificates \
    && pro attach --attach-config /run/secrets/pro-attach-config \
    && pro enable usg \
    && apt install -y usg \
    && pro enable fips-updates --assume-yes \
    && apt update && apt upgrade -y \
    && apt install -y openssl libssl1.1 libssl1.1-hmac libgcrypt20 libgcrypt20-hmac strongswan strongswan-hmac openssh-client openssh-server linux-image-fips \
    && apt install -y --no-install-recommends \
    aide \
    aide-common \
    auditd \
    audispd-plugins \
    chrony \
    conntrack \
    console-data \
    coreutils \
    cryptsetup \
    curl \
    debianutils \
    dmsetup \
    dosfstools \
    dracut \
    dracut-network \
    e2fsprogs \
    efibootmgr \
    file \
    fuse \
    gawk \
    gdisk \
    grub2 \
    grub2-common \
    grub-efi-amd64-bin \
    grub-efi-amd64-signed \
    grub-pc-bin \
    haveged \
    iproute2 \
    iptables \
    isc-dhcp-common \
    jq \
    kbd \
    krb5-locales \
    libpam-pwquality \
    lldpd \
    lvm2 \
    mdadm \
    nano \
    nbd-client \
    ncurses-term \
    neovim \
    networkd-dispatcher \
    nfs-common \
    open-iscsi \
    openssh-server \
    open-vm-tools \
    os-prober \
    packagekit-tools \
    parted \
    patch \
    policykit-1 \
    publicsuffix \
    qemu-guest-agent \
    rsync \
    shared-mime-info \
    snmpd \
    squashfs-tools \
    sudo \
    systemd \
    systemd-timesyncd \
    thermald \
    ubuntu-advantage-tools \
    vlock \
    xdg-user-dirs \
    xxd \
    xz-utils \
    zerofree \
    zfsutils-linux \
    zstd \
    && apt remove -y unattended-upgrades && apt clean \
    && rm -rf /var/lib/apt/lists/* \
    && usg fix disa_stig \
    && pro detach --assume-yes

## Initialize aide
RUN aide.wrapper --init
RUN mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db

## Kairos setup
## From documentation: https://kairos.io/docs/reference/build-from-scratch/
RUN mkdir -p /run/lock
RUN mkdir -p /usr/libexec
RUN touch /usr/libexec/.keep

# Copy the Kairos framework files. We use master builds here for fedora. See https://quay.io/repository/kairos/framework?tab=tags for a list
COPY --from=kairos-fips / /

RUN sed -i 's/\bsource\b/./g' /system/oem/00_rootfs.yaml
RUN sed -i 's/\bsource\b/./g' /system/oem/09_openrc_services.yaml
RUN sed -i 's/\bsource\b/./g' /system/oem/50_recovery.yaml

# Copy the os-release file to identify the OS
COPY --from=osbuilder /workspace/os-release /etc/os-release

## Configuration
## Took from: https://github.com/kairos-io/kairos/blob/master/images/Dockerfile.ubuntu-20-lts
# workaround https://github.com/kairos-io/kairos/issues/949
>>>>>>> c5740fa (Updaed Dockerfiles for Fips)
COPY dracut-broken-iscsi-ubuntu-20.patch /
RUN cd /usr/lib/dracut/modules.d/95iscsi && patch < /dracut-broken-iscsi-ubuntu-20.patch && rm -rf /dracut-broken-iscsi-ubuntu-20.patch

COPY dracut.conf /etc/dracut.conf.d/kairos-fips.conf

RUN --mount=type=bind,from=kairos-init,src=/kairos-init,dst=/kairos-init \
    /kairos-init -l debug -s init --version "${KAIROS_VERSION}"

RUN apt-get update && apt-get install -y --no-install-recommends dracut dracut-network isc-dhcp-common isc-dhcp-client cloud-guest-utils \
    && apt-get remove -y unattended-upgrades && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Symlink kernel HMAC
RUN kernel=$(ls /boot/vmlinuz-* | head -n1) && ln -sf ."${kernel#/boot/}".hmac /boot/.vmlinuz.hmac

RUN ln -s /usr/sbin/grub-install /usr/sbin/grub2-install
RUN ln -s /usr/bin/grub-editenv /usr/bin/grub2-editenv

# Clear cache
RUN rm -rf /var/cache/* /tmp/* /var/tmp/* && \
    journalctl --vacuum-size=1K || true && \
    rm -f /etc/machine-id /var/lib/dbus/machine-id /etc/hostname || true
